library(here)
library(usethis)
usethis()
usegit()
library(usethis)
use_git()
library(tidyverse)
library(here)
library(usethis)
library(tidyverse)
library(sf)
library(osmdata)
install.packages("osmdata")
install.packages("dodgr")
library(here)
library(usethis)
library(tidyverse)
library(sf)
library(osmdata)
library(dodgr)
# read poi data
poi24 <- st_read(here::here("Dataset", "lambeth-POI-2024.gpkg"))
# read LSOA dataset
lsoa11 <- st_read(here::here("Dataset", "london-LSOA-2011.gpkg"))
# read borough dataset
borough <- st_read(here::here("Dataset", "London-Boroughs.gpkg"))
# inspect poi data
head(poi24)
head(lsoa11)
head(borough)
# filter school poi data
poi_schools <- poi24 %>%
filter(str_detect(main_category, "school"))
# inspect
head(unique(poi_schools$main_category), n=50)
mutate(main_category = str_replace_all(main_category, "\", ""))
mutate(main_category = str_replace_all(main_category, "\", ""))
mutate(main_category = str_replace_all(main_category, "\", ""))
mutate(main_category = str_replace_all(main_category, "\", ""))
# remove quotes for easier processing
poi_schools <- poi_schools %>%
mutate(main_category = str_replace_all(main_category, "\"", ""))
# filter school poi data
poi_schols <- poi_schools %>%
filter(main_category == "elementary_school" |
main_category == "high_school" |
main_category == "middle_school" |
main_category == "private_school" |
main_category == "public_school" |
main_category == "school")
# filter school poi data
poi_schools <- poi_schools %>%
filter(main_category == "elementary_school" |
main_category == "high_school" |
main_category == "middle_school" |
main_category == "private_school" |
main_category == "public_school" |
main_category == "school")
rm(poi_schols)
# filter school poi data
lambeth <- borough %>%
filter(name == "Lambeth")
poi_schools <- poi_schools %>%
st_intersection(lambeth) %>%
select(1:11)
# inspect
poi_schools
table(poi_schools$alternate_category)
# filter school poi data
poi_schools <- poi_schools %>%
filter(str_detect(alternate_category, "elementary_school") |
str_detect(alternate_category, "high_school") |
str_detect(alternate_category, "middle_school") |
str_detect(alternate_category, "private_school") |
str_detect(alternate_category, "public_school"))
# inspect
poi_schools
# identify duplicate postcodes
poi_schools <- poi_schools %>%
group_by(postcode) %>%
mutate(rank = rank(primary_name)) %>%
ungroup()
# filter school poi data
poi_schools <- poi_schools %>%
filter(is.na(postcode) | rank == 1) %>%
select(-rank)
# filter school poi data
poi_schools <- poi_schools %>%
filter(is.na(postcode) | rank == 1) %>%
select(-rank)
# inspect
poi_schools
# inspect
poi_schools
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_cetagory, "fast_food_restaurant"), str_detect(alternate_cetagory, "fast_food_restaurant"), str_detect(alternate_cetagory, "chicken_restaurant"), str_detect(alternate_cetagory, "burger_restaurant"))
# inspect
poi_fastfood
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_cetagory, "fast_food_restaurant"), str_detect(alternate_cetagory, "fast_food_restaurant"), str_detect(alternate_cetagory, "chicken_restaurant"), str_detect(alternate_cetagory, "burger_restaurant"))
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_category, "fast_food_restaurant"), str_detect(alternate_category, "fast_food_restaurant"), str_detect(alternate_cetegory, "chicken_restaurant"), str_detect(alternate_category, "burger_restaurant"))
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_category, "fast_food_restaurant"), str_detect(alternate_category, "fast_food_restaurant"), str_detect(alternate_cetegory, "chicken_restaurant"), str_detect(alternate_category, "burger_restaurant"))
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_category, "fast_food_restaurant"), str_detect(alternate_category, "fast_food_restaurant"), str_detect(alternate_category, "chicken_restaurant"), str_detect(alternate_category, "burger_restaurant"))
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_category, "fast_food_restaurant"), str_detect(alternate_category, "fast_food_restaurant"), str_detect(alternate_category, "chicken_restaurant"), str_detect(alternate_category, "burger_restaurant"))
# inspect
poi_fastfood
# filter fast food poi data
poi_fastfood <- poi24 %>%
filter(str_detect(main_category, "fast_food_restaurant") | str_detect(alternate_category, "fast_food_restaurant") | str_detect(alternate_category, "chicken_restaurant") | str_detect(alternate_category, "burger_restaurant"))
# inspect
poi_fastfood
poi_lambeth <- rbind(poi_schools, poi_fastfood)
# combine for mapping
poi_schools <- poi_schools %>%
mutate(type = "School")
poi_fastfood <- poi_fastfood %>%
mutate(type = "Fast food")
poi_lambeth <- rbind(poi_schools, poi_fastfood)
# combine for mapping
poi_schools <- poi_schools %>%
mutate(type = "School")
poi_fastfood <- poi_fastfood %>%
mutate(type = "Fast food")
poi_lambeth <- rbind(poi_schools, poi_fastfood)
# combine for mapping
poi_schools <- poi_schools %>%
mutate(type = "School")
poi_fastfood <- poi_fastfood %>%
mutate(type = "Fast food")
poi_lambeth <- rbind(poi_schools, poi_fastfood)
tm_shape(lambeth) +
tm_polygons(col = "#f0f0f0") +
tm_shape(poi_lambeth) +
tm_dots(col = "type", size = 0.05, palette = c("#beaed4", "#fdc086"), title = "") +
tm_layout(legend.outside = TRUE,
legend.position = c("right", "bottom"),
frame = FALSE)
tm_shape(lambeth) +
tm_polygons(col = "#f0f0f0") +
tm_shape(poi_lambeth) +
tm_dots(col = "type", size = 0.05, palette = c("#beaed4", "#fdc086"), title = "") +
tm_layout(legend.outside = TRUE,
legend.position = c("right", "bottom"),
frame = FALSE)
library(tmap)
tm_shape(lambeth) +
tm_polygons(col = "#f0f0f0") +
tm_shape(poi_lambeth) +
tm_dots(col = "type", size = 0.05, palette = c("#beaed4", "#fdc086"), title = "") +
tm_layout(legend.outside = TRUE,
legend.position = c("right", "bottom"),
frame = FALSE)
# define our bbox coordinates, use WGS84
bbox_lambeth <- poi24 %>%
st_transform(4326) %>%
st_bbox()
# osm query
osm_network <- opq(bbox = bbox_lambeth) %>%
add_osm_feature(key = "highway", value = c("primary", "secondary", "tertiary", "residential", "path", "footway", "unclassified", "living_street", "pedestrian"))
# osm query
osm_network <- opq(bbox = bbox_lambeth) %>%
add_osm_feature(key = "highway", value = c("primary", "secondary", "tertiary", "residential", "path", "footway", "unclassified", "living_street", "pedestrian")) %>%
osmdata_sf()
# extract the nodes, with their osm_id
osm_network_nodes <- osm_netwrk$osm_points[, "osm_id"]
# extract the nodes, with their osm_id
osm_network_nodes <- osm_netwrk$osm_points[, "osm_id"]
# osm query
osm_network <- opq(bbox = bbox_lambeth) %>%
add_osm_feature(key = "highway", value = c("primary", "secondary", "tertiary", "residential", "path", "footway", "unclassified", "living_street", "pedestrian")) %>%
osmdata_sf()
# extract the nodes, with their osm_id
osm_network_nodes <- osm_netwrk$osm_points[, "osm_id"]
# extract the nodes, with their osm_id
osm_network_nodes <- osm_netwrk$osm_points[, "osm_id"]
View(osm_network)
# extract the nodes, with their osm_id
osm_network_nodes <- osm_network$osm_points[, "osm_id"]
# extract the edges, with their osm_id and relevant columns
osm_network_edges <- osm_network$osm_lines[, c("oms_id", "name", "oneway")]
# extract the edges, with their osm_id and relevant columns
osm_network_edges <- osm_network$osm_lines[, c("osm_id", "name", "oneway")]
# inspect
head(osm_networ_nodes)
# inspect
head(osm_network_nodes)
# inspect
head(osm_network_edges)
# extract the edges, with their osm_id and relevant columns
osm_network_edges <- osm_network$osm_lines[, c("osm_id", "name", "highway", "maxspeed", "oneway")]
# inspect
head(osm_network_edges)
# inspect
head(osm_network_nodes)
tm_shape(osm_network_edges) +
tm_lines(
col = "#bdbdbd",
lwd = 0.2
) +
tm_shape(lambeth) +
tm_borders(
col = "#252525",
lwd = 2
) +
tm_add_legend(
type = "line",
labels = "Road segments",
col = "#bdbdbd"
) +
tm_add_legend(
type = "line",
labels = "Oueline Lambeth",
col = "#252525"
) +
tm_layout(
frame = FALSE,
legend.outside = TRUE,
legend.position = c("right", "bottom")
)
# overwrite one-way default
osm_network_edges$oneway <- "no"
# replace missing highway tags with unclassified
osm_network_edges <- ｏｓｍ＿ｎｅｔｗｏｒｋ＿ｅｄｇｅｓ
ａａ
ａ
